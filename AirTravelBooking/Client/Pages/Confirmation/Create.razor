@page "/Confirmation/Create"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Confirmation</h3>
<hr />
<br />

<FormComponent ButtonText="Create Confirmation" OnValidSubmit="@CreateConfirmation" confirmation="confirmation" />

@code {
    Confirmation confirmation = new Confirmation();

    private IList<Seat> Seats;
    private IList<Destination> Destinations;
    private IList<Customer> Customers;
    private IList<Airplane> Airplanes;
    private IList<Priority> Priorities;
    private IList<Baggage> Baggages;
    private IList<Payment> Payments;

    protected async override Task OnInitializedAsync()
    {
        Seats = await _client.GetFromJsonAsync<List<Seat>>($"{EndPoints.SeatsEndPoint}");
        Destinations = await _client.GetFromJsonAsync<List<Destination>>($"{EndPoints.DestinationsEndPoint}");
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{EndPoints.CustomersEndPoint}");
        Airplanes = await _client.GetFromJsonAsync<List<Airplane>>($"{EndPoints.AirplanesEndPoint}");
        Priorities = await _client.GetFromJsonAsync<List<Priority>>($"{EndPoints.PrioritiesEndPoint}");
        Baggages = await _client.GetFromJsonAsync<List<Baggage>>($"{EndPoints.BaggagesEndPoint}");
        Payments = await _client.GetFromJsonAsync<List<Payment>>($"{EndPoints.PaymentsEndPoint}");
    }

    private async Task CreateConfirmation()
    {
        await _client.PostAsJsonAsync(EndPoints.ConfirmationsEndPoint, confirmation);
        _navManager.NavigateTo("/Confirmation");
    }

}
